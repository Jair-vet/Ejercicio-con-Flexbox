:root {
    --azul: #0071b7;
    --blanco: #FFF;
    --naranja: #ff4f1e;
}
html {
    font-size: 62.5%; /** 1REM = 10pX **/
    box-sizing: border-box;
}
*, *:before, *:after {
    box-sizing: inherit;
}
  

body {
    background-color: var(--azul);
    font-family:  'Lato', sans-serif;
    font-size: 1.6rem;
}

h1, h2 {
    color: var(--blanco);
    text-align: center;
    margin: 5rem 0;
    padding: 1rem;
}
.caja-curso {
    background-color: var(--naranja);
    text-align: center;
    color: var(--blanco);
    padding: 5rem;

}
.caja-curso h1 {
    margin: 0;
}
.caja-curso p {
    font-size: 2.4rem;
}
.caja-curso a {
    font-size: 2.4rem;
    padding: 2rem;
    display: inline-block;
    text-decoration: none;
    color: var(--blanco);
    padding: 0;
}


.contenedor {
    max-width: 120rem;
    margin: 0 auto;
}
.box {
    background-color: var(--naranja);
    color: var(--blanco);
    padding: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 4rem;
    border: 1rem solid #bb2b03;
}

.contenedor > div {
    background-color: var(--blanco);
    padding: 5rem;
}

/* 1 */
/* ? Display Flex */
/* 
? Por Defecto se Ponen uno aun lado del otro 
? Cuando inicializamos nuetra caja de flexbox. 
*/
.d-flex{
    display: flex;
    /* ? POR DEFECTO (Cuando usamos flex)
        flex-direction: row
        justify-content: flex-start
        align-items: stretch
    */
}

/* 2  */
/* ?  Flex Direction */
/* 
? Automaticamante se inicia un Flex-direction
*/
.d-flex-2{
    display: flex;
    flex-direction: column;
    /*  colum-reverse
        row-reverse
    */
}

/* 3 */
/* ? Justify Content (Dirección Row) */
.d-flex-3{
    display: flex;
    justify-content: space-evenly;
    /* 
        flex-start
        center
        flex-end 
        space-evenly
        space-between
        space-around
    */
}

/* 4 */
/* ? Justify Content (Dirección Column) */
.d-flex-4{
    display: flex;
    flex-direction: column;
    height: 1000px;

    /* alinear de Izquierda a Derecha */
    justify-content: space-around;
}

/* 5 */
/* ? Align Items (Dirección Row) */
.d-flex-5{
    /* Se estiran con la altura  */
    display: flex;
    height: 700px;

    /* Alinear de Abajo a Arriba */
    align-items: flex-end;
     /* stretch: Estira el tamaño
        flex-start: Coloca en la parte de arrriba
        flex-end: lo posiciona en la parte de abajo
        flex-center: centra el contenido
        baseline: 
     */
}

/* 6 */
/* ? Align Items (Dirección Columna) */
.d-flex-6{
    display: flex;
    flex-direction: column;
    height: 700px;
    
    /* Alinear Horizontalmente */
    align-items: center;
    /* 
        center: Centra los valores
        flex-start: Agrupa al inicio en columna
        flex-end: Alinea al final
    */
}

/* 7 */
/* ? Align Items y JustifyContent */
.d-flex-7{
    display: flex;
    height: 800px;

    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-end;

}

/* 8 */
/* ? Flex Basis */
/*  Se le agrega al Hijo de cada elemento
    Debemos crear ota clase la cual es la que sera alterada
 */
.d-flex-8{
    display: flex;
}
.d-flex-8 .box{
    flex-basis: 33.3%;
    flex-basis: 200px;
}


/* 9 */
/* ? Gap y Calc */
.d-flex-9{
    display: flex;
    justify-content: space-between;
    /* Gap: te permite crear separacion */
}
.d-flex-9 .box:nth-child(1){
    flex-basis: calc(50% - 1rem);
}
.d-flex-9 .box:nth-child(2),
.d-flex-9 .box:nth-child(3){
    flex-basis: calc(25% - 1rem);
}

/* 10 */
/* ? Flex Wrap */
/* El estandar agrega un nowrap 
    El cual hace que contenido sigan
    hacia la derecha.
*/
.d-flex-10{
    display: flex;
    flex-wrap: wrap;
    /* flex-wrap: wrap-reverse; */

}
.d-flex-10 .box{
    flex-basis: calc(33.3%);
}


/* 11 */
/*  ? Flex Grow */
.d-flex-11{
    display: flex;
}
.d-flex-11 .box:nth-child(1){
    /* 1: Crece hasta tomar todo el espacio disponible */
    /* 
        ?flex-grow
        Factor de crecimiento.
        -> Ese el mismo para todos
        -> Por defecto no hay factor de crecimiento
        -> Numero (Cantidad de pixeles que recibe un elemento).
        
    */
    flex-grow: 1;
}
.d-flex-11 .box:nth-child(2){
    flex-grow: 3;
}
.d-flex-11 .box:nth-child(3){
    flex-grow: 5;
}


/* 12 */
/* ? Flex Shrink */
/* Como se va haciendo pequeño un elemento */
.d-flex-12{
    display: flex;
}

.d-flex-12 .box{
    flex-grow: 1;
    flex-basis: 300px;
}
.d-flex-12 .box:nth-child(3){
    flex-shrink: 2;
}


/* 13 */
/* ? Flex Shorthand */
.d-flex-13{
    display: flex;
}
.d-flex-13 .box{
    /* flex-basis: 33.3%;
    flex-grow: 1;
    flex-shrink: 1; */

    /* Es una version mas corta */
    flex: 1 0;
}